apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
  labels:
    app: netbox
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: netbox
  replicas: 1
  template:
    metadata:
      labels:
        app: netbox
    spec:
      containers:
      - name: netbox
        image: netboxcommunity/netbox:v3.0.8-ldap
        ports:
        - containerPort: 8080
        env:
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: ALLOWED_HOSTS
              name: netbox-netbox-env
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: DB_HOST
              name: netbox-netbox-env
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: netbox-netbox-env
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DB_PASSWORD
              name: netbox-netbox-env
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: DB_USER
              name: netbox-netbox-env
        - name: EMAIL_FROM
          valueFrom:
            configMapKeyRef:
              key: EMAIL_FROM
              name: netbox-netbox-env
        - name: EMAIL_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: EMAIL_PASSWORD
              name: netbox-netbox-env
        - name: EMAIL_PORT
          valueFrom:
            configMapKeyRef:
              key: EMAIL_PORT
              name: netbox-netbox-env
        - name: EMAIL_SERVER
          valueFrom:
            configMapKeyRef:
              key: EMAIL_SERVER
              name: netbox-netbox-env
        - name: EMAIL_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: EMAIL_TIMEOUT
              name: netbox-netbox-env
        - name: EMAIL_USERNAME
          valueFrom:
            configMapKeyRef:
              key: EMAIL_USERNAME
              name: netbox-netbox-env
        - name: NETBOX_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: NETBOX_PASSWORD
              name: netbox-netbox-env
        - name: NETBOX_USERNAME
          valueFrom:
            configMapKeyRef:
              key: NETBOX_USERNAME
              name: netbox-netbox-env
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: netbox-netbox-env
        - name: SUPERUSER_API_TOKEN
          valueFrom:
            configMapKeyRef:
              key: SUPERUSER_API_TOKEN
              name: netbox-netbox-env
        - name: SUPERUSER_EMAIL
          valueFrom:
            configMapKeyRef:
              key: SUPERUSER_EMAIL
              name: netbox-netbox-env
        - name: SUPERUSER_NAME
          valueFrom:
            configMapKeyRef:
              key: SUPERUSER_NAME
              name: netbox-netbox-env
        - name: SUPERUSER_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: SUPERUSER_PASSWORD
              name: netbox-netbox-env
        - name: CORS_ORIGIN_ALLOW_ALL
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN_ALLOW_ALL
              name: netbox-netbox-env
        - name: EMAIL_USE_SSL
          valueFrom:
            configMapKeyRef:
              key: EMAIL_USE_SSL
              name: netbox-netbox-env
        - name: EMAIL_USE_TLS
          valueFrom:
            configMapKeyRef:
              key: EMAIL_USE_TLS
              name: netbox-netbox-env
        - name: HOUSEKEEPING_INTERVAL
          valueFrom:
            configMapKeyRef:
              key: HOUSEKEEPING_INTERVAL
              name: netbox-netbox-env
        - name: MAX_PAGE_SIZE
          valueFrom:
            configMapKeyRef:
              key: MAX_PAGE_SIZE
              name: netbox-netbox-env
        - name: MEDIA_ROOT
          valueFrom:
            configMapKeyRef:
              key: MEDIA_ROOT
              name: netbox-netbox-env
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              key: METRICS_ENABLED
              name: netbox-netbox-env
        - name: NAPALM_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: NAPALM_TIMEOUT
              name: netbox-netbox-env
        - name: REDIS_CACHE_DATABASE
          valueFrom:
            configMapKeyRef:
              key: REDIS_CACHE_DATABASE
              name: netbox-netbox-env
        - name: REDIS_CACHE_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_CACHE_HOST
              name: netbox-netbox-env
        - name: REDIS_CACHE_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: REDIS_CACHE_PASSWORD
              name: netbox-netbox-env
        - name: REDIS_CACHE_SSL
          valueFrom:
            configMapKeyRef:
              key: REDIS_CACHE_SSL
              name: netbox-netbox-env
        - name: REDIS_DATABASE
          valueFrom:
            configMapKeyRef:
              key: REDIS_DATABASE
              name: netbox-netbox-env
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: netbox-netbox-env
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: REDIS_PASSWORD
              name: netbox-netbox-env
        - name: REDIS_SSL
          valueFrom:
            configMapKeyRef:
              key: REDIS_SSL
              name: netbox-netbox-env
        - name: RELEASE_CHECK_URL
          valueFrom:
            configMapKeyRef:
              key: RELEASE_CHECK_URL
              name: netbox-netbox-env
        - name: SKIP_STARTUP_SCRIPTS
          valueFrom:
            configMapKeyRef:
              key: SKIP_STARTUP_SCRIPTS
              name: netbox-netbox-env
        - name: SKIP_SUPERUSER
          valueFrom:
            configMapKeyRef:
              key: SKIP_SUPERUSER
              name: netbox-netbox-env
        - name: WEBHOOKS_ENABLED
          valueFrom:
            configMapKeyRef:
              key: WEBHOOKS_ENABLED
              name: netbox-netbox-env
#        - name: REMOTE_AUTH_BACKEND
#          valueFrom:
#            configMapKeyRef:
#              key: REMOTE_AUTH_BACKEND
#              name: netbox-ldap-env
#        - name: AUTH_LDAP_SERVER_URI
#          valueFrom:
#            configMapKeyRef:
#              key: AUTH_LDAP_SERVER_URI
#              name: netbox-ldap-env
#        - name: AUTH_LDAP_USER_DN_TEMPLATE
#          valueFrom:
#            configMapKeyRef:
#              key: AUTH_LDAP_USER_DN_TEMPLATE
#              name: netbox-ldap-env
#        - name: AUTH_LDAP_MIRROR_GROUPS
#          valueFrom:
#            configMapKeyRef:
#              key: AUTH_LDAP_MIRROR_GROUPS
#              name: netbox-ldap-env
        volumeMounts:
        - name: netbox-nginx-config
          mountPath: /etc/netbox-nginx/ 
        - name: netbox-static-files
          mountPath: /opt/netbox/netbox/static
      restartPolicy: Always
      volumes:
      - name: netbox-nginx-config
        configMap:
          name: nginx-conf
      - name: netbox-static-files
        persistentVolumeClaim:
          claimName: netbox-static-files

---
apiVersion: v1
kind: Service
metadata:
  name: netbox
  labels:
    app: netbox
spec:
  ports:
  - name: nbox
    port: 8080
    targetPort: 8080
  selector:
    app: netbox

      
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: netbox-static-files
  labels:
    pvcname: netbox-static-files
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: netbox-netbox-env
data:
  ALLOWED_HOSTS: '*'
  DB_HOST: "postgres"
  DB_NAME: "netbox"
  DB_PASSWORD: "J5brHrAXFLQSif0K"
  DB_USER: "netbox"
  DB_WAIT_DEBUG: "1"
  EMAIL_FROM: "netbox@bar.com"
  EMAIL_PASSWORD: "bar"
  EMAIL_PORT: "25"
  EMAIL_SERVER: "localhost"
  EMAIL_TIMEOUT: "10"
  EMAIL_USERNAME: "foo"
  NETBOX_PASSWORD: "guest"
  NETBOX_USERNAME: "guest"
  SUPERUSER_API_TOKEN: "0123456789abcdef0123456789abcdef01234567"
  SUPERUSER_EMAIL: "admin@example.com"
  SUPERUSER_NAME: "admin"
  SUPERUSER_PASSWORD: "admin"
  CORS_ORIGIN_ALLOW_ALL: "True"
  EMAIL_USE_SSL: "false"
  EMAIL_USE_TLS: "false"
  HOUSEKEEPING_INTERVAL: "86400"
  MAX_PAGE_SIZE: "1000"
  MEDIA_ROOT: "/opt/netbox/netbox/media"
  METRICS_ENABLED: "false"
  NAPALM_TIMEOUT: "10"
  REDIS_CACHE_DATABASE: "1"
  REDIS_CACHE_HOST: "redis-cache"
  REDIS_CACHE_PASSWORD: "t4Ph722qJ5QHeQ1qfu36"
  REDIS_CACHE_SSL: "false"
  REDIS_DATABASE: "0"
  REDIS_HOST: "redis"
  REDIS_PASSWORD: "H733Kdjndks81"
  REDIS_SSL: "false"
  RELEASE_CHECK_URL: "https://api.github.com/repos/netbox-community/netbox/releases"
  SECRET_KEY: "r8OwDznj!!dci#P9ghmRfdu1Ysxm0AiPeDCQhKE+N_rClfWNj"
  SKIP_STARTUP_SCRIPTS: "false"
  SKIP_SUPERUSER: "true"
  WEBHOOKS_ENABLED: "true"
#  EMAIL_SSL_CERTFILE: 
#  EMAIL_SSL_KEYFILE:   
#  NAPALM_USERNAME:   
#  NAPALM_PASSWORD: 
---
apiVersion: v1
kind: ConfigMap
metadata: 
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;
    events {
      worker_connections  1024;
    }
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      sendfile        on;
      tcp_nopush     on;
      keepalive_timeout  65;
      gzip  on;
      server_tokens off;
      server {
          listen 80;
          server_name localhost;
          access_log off;
          location /static/ {
            alias /opt/netbox/netbox/static/;
          }
          location / {
            proxy_pass http://netbox:8080;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';
          }
      }
    }

